{"version":3,"sources":["Components/common/FormsControls/formsControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","Components/Dialogs/dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/HOC/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","tekst","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","to","Message","message","maxLength50","AddNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messageElements","messages","m","dialogsItems","values","sendMessage","onAddMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","newMessage","sendMessageCreator","Component"],"mappings":"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","file":"static/js/5.d25dae26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2lDIg\",\"error\":\"formsControls_error__1xuuN\",\"formSummaryError\":\"formsControls_formSummaryError__2FIvy\"};","import styles from  './formsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FormControl = ({input, meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input}{...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input}{...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component, props={}, tekst='') => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n           {...props}\r\n    /> {tekst}\r\n    </div>\r\n)\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3XWBC\",\"dialogsItems\":\"dialogs_dialogsItems__339sI\",\"active\":\"dialogs_active__buM7N\",\"messages\":\"dialogs_messages__3CSzJ\"};","import React from 'react'\r\nimport s from './../dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}><NavLink to={path}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './../dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n return(\r\n     <div className={s.dialog}> {props.message} </div>\r\n )\r\n}\r\n\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 =  maxLengthCreator(50)\r\n\r\nconst AddNewMessage = (props)=> {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field name={'onAddMessage'} component={Textarea} validate={[required ,maxLength50]} placeholder='new message'></Field>\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewMessageForm = reduxForm({form:'MessagesAddNewMessageReduxForm'})(AddNewMessage)","import React from 'react'\r\nimport s from './dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AddNewMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    let messageElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.onAddMessage);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <AddNewMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react'\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessage)=>{\r\n            dispatch(sendMessageCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}