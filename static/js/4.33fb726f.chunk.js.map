{"version":3,"sources":["Components/common/FormsControls/formsControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContaiener.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","tekst","validate","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","style","formSummaryError","type","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","src","jobSearchIcon","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","initialValues","formData","then","Post","item","post","likesCount","maxLength10","MyPosts","React","memo","postsElement","posts","p","id","postBlock","AddPostReduxForm","values","addPost","newPostText","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,6LCG9GC,G,KAAc,SAAC,GAA4C,EAA3CC,MAA4C,IAAD,IAApCC,KAAMC,EAA8B,EAA9BA,QAAQC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAChDC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,SAKnBM,EAAW,SAACC,GAAW,IACzBV,EAAkCU,EAAlCV,MAAqBW,GAAaD,EAA5BT,KAA4BS,EAAvBE,MADa,YACUF,EADV,2BAE/B,OAAO,eAACX,EAAD,2BAAiBW,GAAjB,kBAAyB,oDAAcV,GAAUW,IAAjD,SAGEE,EAAQ,SAACH,GAAW,IACtBV,EAAkCU,EAAlCV,MAAqBW,GAAaD,EAA5BT,KAA4BS,EAAvBE,MADU,YACaF,EADb,2BAE5B,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aACH,iDAAWV,GAAUW,QAIhBG,EAAc,SAACC,EAAYC,EAAKC,EAAWC,GAA7B,IAAwCR,EAAxC,uDAA8C,GAAIS,EAAlD,uDAAwD,GAAxD,OACvB,gCACA,cAAC,IAAD,aAAOJ,YAAaA,EAAaC,KAAMA,EAChCI,SAAUH,EACVC,UAAWA,GACPR,IAJX,IAKIS,O,iCClCR,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNlC3B,EAAOC,QAAU,CAAC,WAAa,gCAAgC,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,6BAA6B,cAAgB,qC,oBCA1ND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,oBCAjED,EAAOC,QAAU,CAAC,KAAO,qB,uHCGV,SAAS4B,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGjB,QAETM,GAAKM,EAAKT,SAAWG,GAH8CO,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF,G,+BIgCvFC,EAnCe,SAACrC,GAAW,IAAD,IACLsC,oBAAS,GADJ,GAC9BC,EAD8B,KACpBC,EADoB,SAETF,mBAAStC,EAAMyC,QAFN,GAE9BA,EAF8B,KAEtBC,EAFsB,KAIrCC,qBAAU,WACND,EAAU1C,EAAMyC,UACjB,CAACzC,EAAMyC,SAaV,OACI,iCACMF,GACF,gCACE,0CADF,KACoB,sBAAMK,cAfT,WACrBJ,GAAY,IAcY,SAAwCxC,EAAMyC,QAAU,kBAG3EF,GACD,8BACI,uBAAOM,SAbK,SAACC,GACrBJ,EAAUI,EAAEC,cAAcnC,QAYgBoC,WAAW,EAAMC,OAjBpC,WACvBT,GAAY,GACZxC,EAAMkD,aAAaT,IAeoE7B,MAAO6B,U,6CCOvFU,EAFcC,YAAU,CAACC,KAAM,gBAAjBD,EA7BL,SAAC,GAAkC,IAAjCE,EAAgC,EAAhCA,aAAaC,EAAmB,EAAnBA,QAAQ9D,EAAW,EAAXA,MAC3C,OAAO,uBAAM+D,SAAUF,EAAhB,UACH,oCAAM,0CAAN,OACC7D,GAAS,qBAAKG,UAAW6D,IAAMC,iBAAtB,SAAyCjE,IACnD,gCACI,4CADJ,KACyBW,YAAY,YAAY,WAAY,GAAGD,QAEhE,gCACI,oDADJ,MACmCC,YAAY,GAAG,iBAAkB,GAAGD,IAAO,CAACwD,KAAK,gBAGpF,gCACI,2DACEvD,YAAY,0BAA0B,4BAA6B,GAAGL,QAG5E,gCACI,4CACEK,YAAY,WAAW,UAAW,GAAGL,QAE3C,gCACI,4CADJ,IACyBwB,OAAOqC,KAAKL,EAAQM,UAAUC,KAAI,SAAAC,GACvD,OAAO,qBAAenE,UAAWoE,IAAEC,QAA5B,SACH,8BAAIF,EAAJ,IAAU3D,YAAY2D,EAAI,YAAcA,EAAK,GAAG5D,KAAhD,QADa4D,eCgBvBG,EAAc,SAAC,GAAoC,IAAnCX,EAAkC,EAAlCA,QAAQY,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,aAClC,OAAS,gCACJD,GAAW,8BAAK,wBAAQE,QAASD,EAAjB,oBACjB,gCACI,6CADJ,IACyBb,EAAQe,YAEjC,gCACI,qDADJ,IACiCf,EAAQgB,eACrC,qBAAKC,IAAI,qEAAqE5E,UAAWoE,IAAES,gBAAmB,QAEjHlB,EAAQgB,gBACT,gCACI,2DADJ,IACuChB,EAAQmB,6BAG/C,gCACI,4CADJ,IACwBnB,EAAQoB,WAEhC,gCACI,4CADJ,IACyBpD,OAAOqC,KAAKL,EAAQM,UAAUC,KAAI,SAAAC,GACvD,OAAO,cAAC,EAAD,CAAmBa,aAAcb,EAAKc,aAActB,EAAQM,SAASE,IAAvDA,aAO3Be,EAAU,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,sBAAKjF,UAAWoE,IAAEC,QAAlB,UAA2B,4BAAIW,IAA/B,KAAmDC,EAAnD,QAGIE,EApEK,SAAC,GAAsE,IAArExB,EAAoE,EAApEA,QAASd,EAA2D,EAA3DA,OAAQS,EAAmD,EAAnDA,aAAciB,EAAqC,EAArCA,QAASa,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAAiB,IAEtD3C,oBAAS,GAF6C,GAE/EC,EAF+E,KAErEC,EAFqE,KAItF,IAAKe,EACD,OAAO,cAAC2B,EAAA,EAAD,IAeX,OACI,8BACI,sBAAKtF,UAAWoE,IAAEmB,iBAAlB,UACI,qBAAKX,IAAKjB,EAAQ6B,OAAOC,OAASC,IAAW1F,UAAWoE,IAAEuB,YACzDpB,GAAW,uBAAOR,KAAM,OAAQd,SAhBnB,SAACC,GACnBA,EAAE0C,OAAOC,MAAM1E,QACfiE,EAAUlC,EAAE0C,OAAOC,MAAM,OAgBpBlD,EACK,cAAC,EAAD,CAAiBmD,cAAenC,EAASA,QAASA,EAASC,SAb3D,SAACmC,GACfV,EAAYU,GAAUC,MAAM,WACxBpD,GAAY,SAYF,cAAC,EAAD,CAAa4B,aAAe,WAAM5B,GAAY,IAASe,QAASA,EAASY,QAASA,IAGxF,cAAC,EAAD,CAAuB1B,OAAQA,EAAQS,aAAcA,U,6CCxBtD2C,EAXF,SAAC7F,GAEV,OACQ,sBAAKJ,UAAWoE,IAAE8B,KAAlB,UACI,qBAAKtB,IAAI,0FACRxE,EAAM+F,KACP,sCAAS/F,EAAMgG,kB,kBCFzBC,EAAcpF,YAAiB,IAC/BqF,EAASC,IAAMC,MAAM,SAACpG,GACxB,IAAIqG,EAAerG,EAAMsG,MAAMxC,KAAI,SAAAyC,GAAC,OAAI,cAAC,EAAD,CAAiBR,KAAMQ,EAAER,KAAMC,WAAYO,EAAEP,YAAiBO,EAAEC,OAMxG,OACI,sBAAK5G,UAAWoE,IAAEyC,UAAlB,UACI,8BACI,4CAEJ,cAACC,EAAD,CAAkBlD,SATR,SAACmD,GACf3G,EAAM4G,QAAQD,EAAOE,gBASjB,qBAAKjH,UAAWoE,IAAEsC,MAAlB,SACKD,UAiBXK,EAAmBtD,YAAU,CAACC,KAAK,2BAAhBD,EAXL,SAACpD,GACjB,OAAO,uBAAMwD,SAAUxD,EAAMsD,aAAtB,UACH,8BACI,cAACwD,EAAA,EAAD,CAAOxG,KAAM,cAAeE,UAAWT,IAAUW,SAAU,CAACC,IAASsF,GAAc5F,YAAa,kBAEpG,8BACI,sDAOG6F,I,QCpBAa,EAFQC,aAdF,SAACC,GACrB,MAAM,CACFX,MAAMW,EAAMC,YAAYZ,MACxBO,YAAYI,EAAMC,YAAYL,gBAGX,SAACM,GACrB,MAAM,CACFP,QAAQ,SAACC,GACLM,EAASC,YAAqBP,QAKnBG,CAA4Cd,GCCpDmB,EAhBC,SAACrH,GACb,OACI,gCACI,cAAC,EAAD,CACIgF,UAAWhF,EAAMgF,UACjBb,QAASnE,EAAMmE,QACfZ,QAASvD,EAAMuD,QACfd,OAAQzC,EAAMyC,OACdS,aAAclD,EAAMkD,aACpB+B,YAAajF,EAAMiF,cAEvB,cAAC,EAAD,Q,gBCRNqC,E,+KAEE,IAAIC,EAASC,KAAKxH,MAAMyH,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKxH,MAAMuH,SAEhBC,KAAKxH,MAAM2H,QAAQ1F,KAAK,UAGhCuF,KAAKxH,MAAM4H,eAAeL,GAC1BC,KAAKxH,MAAM6H,cAAcN,K,0CAIzBC,KAAKM,mB,yCAGUC,EAAWC,EAAWC,GACjCT,KAAKxH,MAAMyH,MAAMC,OAAOH,QAAUQ,EAAUN,MAAMC,OAAOH,QACzDC,KAAKM,mB,+BAKT,OAAQ,cAAC,EAAD,2BACAN,KAAKxH,OADL,IAEJmE,SAAUqD,KAAKxH,MAAMyH,MAAMC,OAAOH,OAClChE,QAASiE,KAAKxH,MAAMuD,QACpBd,OAAQ+E,KAAKxH,MAAMyC,OACnBS,aAAcsE,KAAKxH,MAAMkD,aACzB8B,UAAWwC,KAAKxH,MAAMgF,UACtBC,YAAauC,KAAKxH,MAAMiF,mB,GA/BLkB,IAAM+B,WA6CtBC,sBACXnB,aAVkB,SAACC,GACnB,MAAO,CACH1D,QAAS0D,EAAMC,YAAY3D,QAC3BgE,OAAQN,EAAMmB,KAAKb,OACnBc,OAAQpB,EAAMmB,KAAKC,OACnB5F,OAAQwE,EAAMC,YAAYzE,UAKL,CAACmF,mBAAgBC,kBAAe3E,iBAAa8B,cAAUC,kBAChFqD,IAFWH,CAGbb","file":"static/js/4.33fb726f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2lDIg\",\"error\":\"formsControls_error__1xuuN\",\"formSummaryError\":\"formsControls_formSummaryError__2FIvy\"};","import styles from  './formsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FormControl = ({input, meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input}{...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input}{...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component, props={}, tekst='') => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n           {...props}\r\n    /> {tekst}\r\n    </div>\r\n)\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentImg\":\"profileInfo_contentImg__12i0o\",\"descriptionBlock\":\"profileInfo_descriptionBlock__3waKZ\",\"mainPhoto\":\"profileInfo_mainPhoto__ym15R\",\"contact\":\"profileInfo_contact__2Z8Ug\",\"jobSearchIcon\":\"profileInfo_jobSearchIcon__2Eqq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__2vZBV\",\"posts\":\"MyPosts_posts__1WNay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__cxCRM\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState,useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChanged = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n              <b>Status : </b>  <span onDoubleClick={activateEditMode}>{props.status || '----------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChanged} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport s from './profileInfo.module.css'\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/formsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile,error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div> <button>save</button> </div>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <b> Full name </b>: {createField(\"Full name\",\"fullName\", [],Input)}\r\n        </div>\r\n        <div>\r\n            <b> Looking for a job </b> : { createField(\"\",\"lookingForAJob\", [],Input, {type:\"checkbox\"}) }\r\n        </div>\r\n\r\n        <div>\r\n            <b> My profiessional skills :</b>\r\n            { createField(\"My profiessional skills\",\"lookingForAJobDescription\", [],Textarea, ) }\r\n        </div>\r\n\r\n        <div>\r\n            <b> About me :</b>\r\n            { createField(\"About me\",\"aboutMe\", [],Textarea, ) }\r\n        </div>\r\n        <div>\r\n            <b> Contacts :</b> { Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key} {createField(key,\"contacts.\" + key, [],Input)} </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, {useState} from \"react\";\r\nimport s from './profileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\nimport userPhoto from '../../../assets/images/New_user.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n        saveProfile(formData).then( () => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={ ()=> {setEditMode(true)} } profile={profile} isOwner={isOwner}/>\r\n                }\r\n\r\n                <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile,isOwner,goToEditMode}) => {\r\n    return ( <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div> }\r\n        <div>\r\n            <b> Full name :</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b> Looking for a job :</b> {profile.lookingForAJob ?\r\n            <img src=\"http://www.animatedgif.net/sitemessages/search/w-search_ani_e0.gif\" className={s.jobSearchIcon}/> : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b> My profiessional skills :</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b> About me :</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b> Contacts :</b> { Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n    </div> )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n            <div className={s.item}>\r\n                <img src=\"https://tse4.mm.bing.net/th?id=OIP.JYpx8CxzpDll_iTTzaZIPgAAAA&pid=Api&P=0&w=300&h=300\"/>\r\n                {props.post}\r\n                <p>like {props.likesCount}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst MyPosts =React.memo( (props) => {\r\n    let postsElement = props.posts.map(p => <Post key={p.id} post={p.post} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={'newPostText'} component={Textarea} validate={[required,maxLength10]} placeholder={\"PostMessage\"}/>\r\n        </div>\r\n        <div>\r\n            <button>Add Post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form:'ProfileAddPostReduxForm'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps= (state)=>{\r\n return{\r\n     posts:state.profilePage.posts,\r\n     newPostText:state.profilePage.newPostText\r\n }\r\n}\r\nlet mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        addPost:(newPostText)=>{\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContaiener\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Profile\r\n            {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n        />)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        userId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus,savePhoto,saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}