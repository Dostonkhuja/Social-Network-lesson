{"version":3,"sources":["Components/common/FormsControls/formsControls.module.css","utils/validators/validators.js","Components/common/FormsControls/FormsControls.js","Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContaiener.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","tekst","validate","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","s","descriptionBlock","src","photos","large","fullName","aboutMe","href","github","lookingForAJob","lookingForAJobDescription","Preloader","Post","item","post","likesCount","maxLength10","MyPosts","React","memo","postsElement","posts","map","p","id","postBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.e0d310b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2cqoL\",\"error\":\"formsControls_error__3dxly\",\"formSummaryError\":\"formsControls_formSummaryError__3SfGx\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import styles from  './formsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FormControl = ({input, meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return<FormControl {...props}> <textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return<FormControl {...props}> <input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component, props={}, tekst='') => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n           {...props}\r\n    /> {tekst}\r\n    </div>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return(\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return(\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <input {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span> }\r\n//         </div>\r\n//     )\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentImg\":\"profileInfo_contentImg__2HgO-\",\"descriptionBlock\":\"profileInfo_descriptionBlock__9mqPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__1MHJG\",\"posts\":\"MyPosts_posts__1nktE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3gkwy\"};","import React, {useState,useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChanged = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChanged} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport s from './profileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if (!profile) {return <Preloader />}\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img src={profile.photos.large} />\r\n                    <h3>{profile.fullName}</h3>\r\n\r\n                    <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n\r\n                    <h3><i>{profile.aboutMe}</i></h3>\r\n                    <a href={profile.github}></a>\r\n                    <span>{profile.lookingForAJob ? <img src=\"http://www.animatedgif.net/sitemessages/search/w-search_ani_e0.gif\"/> :''}</span>\r\n                    <p>{profile.lookingForAJobDescription}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n            <div className={s.item}>\r\n                <img src=\"https://tse4.mm.bing.net/th?id=OIP.JYpx8CxzpDll_iTTzaZIPgAAAA&pid=Api&P=0&w=300&h=300\"/>\r\n                {props.post}\r\n                <p>like {props.likesCount}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst MyPosts =React.memo( (props) => {\r\n    let postsElement = props.posts.map(p => <Post post={p.post} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={'newPostText'} component={Textarea} validate={[required,maxLength10]} placeholder={\"PostMessage\"}/>\r\n        </div>\r\n        <div>\r\n            <button>Add Post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form:'ProfileAddPostReduxForm'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps= (state)=>{\r\n return{\r\n     posts:state.profilePage.posts,\r\n     newPostText:state.profilePage.newPostText\r\n }\r\n}\r\nlet mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        addPost:(newPostText)=>{\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContaiener\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport  {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId){\r\n            userId=this.props.userId\r\n                if (!userId) {\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (<Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile:state.profilePage.profile,\r\n        userId:state.auth.userId,\r\n        isAuth:state.auth.isAuth,\r\n        status:state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile,getUserStatus,updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}