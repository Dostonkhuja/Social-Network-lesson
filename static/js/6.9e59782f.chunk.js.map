{"version":3,"sources":["Components/common/FormsControls/formsControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","Components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","tekst","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","src","style","formSummaryError","connect","state","auth","isAuth","login","logout","to","formData","email","password","rememberMe","captcha"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,6LCG9GC,G,KAAc,SAAC,GAA4C,EAA3CC,MAA4C,IAAD,IAApCC,KAAMC,EAA8B,EAA9BA,QAAQC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAChDC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,SAKnBM,EAAW,SAACC,GAAW,IACzBV,EAAkCU,EAAlCV,MAAqBW,GAAaD,EAA5BT,KAA4BS,EAAvBE,MADa,YACUF,EADV,2BAE/B,OAAO,eAACX,EAAD,2BAAiBW,GAAjB,kBAAyB,oDAAcV,GAAUW,IAAjD,SAGEE,EAAQ,SAACH,GAAW,IACtBV,EAAkCU,EAAlCV,MAAqBW,GAAaD,EAA5BT,KAA4BS,EAAvBE,MADU,YACaF,EADb,2BAE5B,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aACH,iDAAWV,GAAUW,QAIhBG,EAAc,SAACC,EAAYC,EAAKC,EAAWC,GAA7B,IAAwCR,EAAxC,uDAA8C,GAAIS,EAAlD,uDAAwD,GAAxD,OACvB,gCACA,cAAC,IAAD,aAAOJ,YAAaA,EAAaC,KAAMA,EAChCI,SAAUH,EACVC,UAAWA,GACPR,IAJX,IAKIS,O,iCClCR,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+HCkB5BE,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAhBL,SAAC,GAAsC,IAArCE,EAAoC,EAApCA,aAAc1B,EAAsB,EAAtBA,MAAM2B,EAAgB,EAAhBA,WACpC,OACI,uBAAMC,SAAUF,EAAhB,UACKf,YAAY,QAAS,QAAS,CAACO,KAAWR,KAC1CC,YAAY,WAAY,WAAY,CAACO,KAAWR,IAAO,CAACmB,KAAM,aAC9DlB,YAAY,KAAM,aAAc,KAAMD,IAAO,CAACmB,KAAM,YAAY,eAEhEF,GAAc,qBAAKG,IAAKH,IACxBA,GAAehB,YAAY,qBAAsB,UAAU,CAACO,KAAWR,IAAO,IAE9EV,GAAS,qBAAKG,UAAW4B,IAAMC,iBAAtB,SAAyChC,IACnD,oCAAM,2CAAN,aA0BGiC,uBALS,SAACC,GAAD,MAAY,CAChCP,WAAWO,EAAMC,KAAKR,WACtBS,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,UAAOC,YAAjCL,EAnBD,SAAC,GAAgC,IAA/BI,EAA8B,EAA9BA,MAAOD,EAAuB,EAAvBA,OAAOT,EAAgB,EAAhBA,WAI1B,OAAIS,EACO,cAAC,IAAD,CAAUG,GAAI,aAEjB,qCACA,uCACA,cAAChB,EAAD,CAAgBK,SARP,SAACY,GACdH,EAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAWH,EAASI,UAO9BjB,WAAYA","file":"static/js/6.9e59782f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2lDIg\",\"error\":\"formsControls_error__1xuuN\",\"formSummaryError\":\"formsControls_formSummaryError__2FIvy\"};","import styles from  './formsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FormControl = ({input, meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input}{...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input}{...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component, props={}, tekst='') => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n           {...props}\r\n    /> {tekst}\r\n    </div>\r\n)\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/FormsControls/formsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error,captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Login\", 'email', [required], Input)}\r\n            {createField(\"Password\", 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'},'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl &&  createField(\"Symbols from image\", 'captcha',[required], Input, {}) }\r\n\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <div> <button>Login</button> </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({login, isAuth,captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe,formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (<>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);"],"sourceRoot":""}